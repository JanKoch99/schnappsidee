/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const PerpetratorLazyImport = createFileRoute('/perpetrator')()
const PaymentLazyImport = createFileRoute('/payment')()
const DrinkLazyImport = createFileRoute('/drink')()
const ChallengeLazyImport = createFileRoute('/challenge')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const PerpetratorLazyRoute = PerpetratorLazyImport.update({
  path: '/perpetrator',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/perpetrator.lazy').then((d) => d.Route))

const PaymentLazyRoute = PaymentLazyImport.update({
  path: '/payment',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/payment.lazy').then((d) => d.Route))

const DrinkLazyRoute = DrinkLazyImport.update({
  path: '/drink',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/drink.lazy').then((d) => d.Route))

const ChallengeLazyRoute = ChallengeLazyImport.update({
  path: '/challenge',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/challenge.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/challenge': {
      id: '/challenge'
      path: '/challenge'
      fullPath: '/challenge'
      preLoaderRoute: typeof ChallengeLazyImport
      parentRoute: typeof rootRoute
    }
    '/drink': {
      id: '/drink'
      path: '/drink'
      fullPath: '/drink'
      preLoaderRoute: typeof DrinkLazyImport
      parentRoute: typeof rootRoute
    }
    '/payment': {
      id: '/payment'
      path: '/payment'
      fullPath: '/payment'
      preLoaderRoute: typeof PaymentLazyImport
      parentRoute: typeof rootRoute
    }
    '/perpetrator': {
      id: '/perpetrator'
      path: '/perpetrator'
      fullPath: '/perpetrator'
      preLoaderRoute: typeof PerpetratorLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  ChallengeLazyRoute,
  DrinkLazyRoute,
  PaymentLazyRoute,
  PerpetratorLazyRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/challenge",
        "/drink",
        "/payment",
        "/perpetrator"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/challenge": {
      "filePath": "challenge.lazy.tsx"
    },
    "/drink": {
      "filePath": "drink.lazy.tsx"
    },
    "/payment": {
      "filePath": "payment.lazy.tsx"
    },
    "/perpetrator": {
      "filePath": "perpetrator.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
